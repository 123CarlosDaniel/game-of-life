// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?

  accounts  Account[]
  creations Creation[]
  comments  Comment[]
  reactions Reaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Creation {
  id          String    @id @default(cuid())
  ownerId     String
  title       String
  description String?   @db.Text
  data        Json
  comments    Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation(fields: [ownerId], references: [id])
}

model Comment {
  id         String  @id @default(cuid())
  opinion    String? @db.Text
  ownerId    String
  creationId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner    User     @relation(fields: [ownerId], references: [id])
  creation Creation @relation(fields: [creationId], references: [id])
}

model Reaction {
  id         String @id @default(cuid())
  reaction   String
  ownerId    String
  owner      User   @relation(fields: [ownerId], references: [id])
  creationId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
